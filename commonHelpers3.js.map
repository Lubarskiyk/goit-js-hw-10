{"version":3,"file":"commonHelpers3.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  position: 'center',\n  onClose(selectedDates) {\n    ckeckDate(selectedDates[0]);\n  },\n};\n\niziToast.settings({\n  timeout: 3000,\n  resetOnHover: true,\n  transitionIn: 'flipInX',\n  transitionOut: 'flipOutX',\n  position: 'center',\n  titleSize: 25,\n  messageSize: 25,\n  backgroundColor: 'rgba(26, 255, 128, 0.8)',\n});\n\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nflatpickr('#datetime-picker', options);\n\nlet totalms = 0;\nlet MyTimer;\n\nfunction ckeckDate(userDate) {\n  totalms = userDate.getTime() - Date.now();\n  if (totalms <= 0) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n    });\n  } else MyTimer = setInterval(setTimer, 1000);\n}\n\nfunction setTimer() {\n  const timernew = convertMs(totalms);\n  days.textContent = timernew.days.padStart(2, '0');\n  hours.textContent = timernew.hours.padStart(2, '0');\n  minutes.textContent = timernew.minutes.padStart(2, '0');\n  seconds.textContent = timernew.seconds.padStart(2, '0');\n  if (totalms >= 1000) {\n    totalms -= 1000;\n  } else {\n    clearInterval(MyTimer);\n  }\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day).toString();\n  const hours = Math.floor((ms % day) / hour).toString();\n  const minutes = Math.floor(((ms % day) % hour) / minute).toString();\n  const seconds = Math.floor(\n    (((ms % day) % hour) % minute) / second\n  ).toString();\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["options","selectedDates","ckeckDate","iziToast","days","hours","minutes","seconds","flatpickr","totalms","MyTimer","userDate","setTimer","timernew","convertMs","ms"],"mappings":"2FAKA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,SAAU,SACV,QAAQC,EAAe,CACrBC,EAAUD,EAAc,CAAC,CAAC,CAC3B,CACH,EAEAE,EAAS,SAAS,CAChB,QAAS,IACT,aAAc,GACd,aAAc,UACd,cAAe,WACf,SAAU,SACV,UAAW,GACX,YAAa,GACb,gBAAiB,yBACnB,CAAC,EAED,MAAMC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvDC,EAAU,mBAAoBR,CAAO,EAErC,IAAIS,EAAU,EACVC,EAEJ,SAASR,EAAUS,EAAU,CAC3BF,EAAUE,EAAS,QAAS,EAAG,KAAK,IAAG,EACnCF,GAAW,EACbN,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACf,CAAK,EACIO,EAAU,YAAYE,EAAU,GAAI,CAC7C,CAEA,SAASA,GAAW,CAClB,MAAMC,EAAWC,EAAUL,CAAO,EAClCL,EAAK,YAAcS,EAAS,KAAK,SAAS,EAAG,GAAG,EAChDR,EAAM,YAAcQ,EAAS,MAAM,SAAS,EAAG,GAAG,EAClDP,EAAQ,YAAcO,EAAS,QAAQ,SAAS,EAAG,GAAG,EACtDN,EAAQ,YAAcM,EAAS,QAAQ,SAAS,EAAG,GAAG,EAClDJ,GAAW,IACbA,GAAW,IAEX,cAAcC,CAAO,CAEzB,CAEA,SAASI,EAAUC,EAAI,CAMrB,MAAMX,EAAO,KAAK,MAAMW,EAAK,KAAG,EAAE,WAC5BV,EAAQ,KAAK,MAAOU,EAAK,MAAO,IAAI,EAAE,WACtCT,EAAU,KAAK,MAAQS,EAAK,MAAO,KAAQ,GAAM,EAAE,WACnDR,EAAU,KAAK,MAChBQ,EAAK,MAAO,KAAQ,IAAU,GAClC,EAAC,SAAQ,EAEV,MAAO,CAAE,KAAAX,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}